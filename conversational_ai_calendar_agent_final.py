# -*- coding: utf-8 -*-
"""Conversational_AI_Calendar_Agent_Final

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Rsh7YWEtpi4zTBChq1f8e1XVk4QLApFV

# **FastAPI Backend with /book Endpoint**
"""

from fastapi import FastAPI, Request
from pydantic import BaseModel
from google.oauth2 import service_account
from googleapiclient.discovery import build
from fastapi.middleware.cors import CORSMiddleware
import datetime

app = FastAPI()

# CORS setup
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Request model
class BookingRequest(BaseModel):
    name: str
    email: str
    start: str
    end: str

@app.get("/")
def root():
    return {"message": "Hello from FastAPI!"}

@app.post("/book")
def book_appointment(req: BookingRequest):
    creds = service_account.Credentials.from_service_account_file(
        "service_account.json",
        scopes=["https://www.googleapis.com/auth/calendar"]
    )
    service = build("calendar", "v3", credentials=creds)

    event = {
        "summary": f"Meeting with {req.name}",
        "description": f"Auto-scheduled meeting with {req.email}",
        "start": {"dateTime": req.start, "timeZone": "Asia/Kolkata"},
        "end": {"dateTime": req.end, "timeZone": "Asia/Kolkata"},
        "attendees": [{"email": req.email}],
    }

    calendar_id = "primary"
    event = service.events().insert(calendarId=calendar_id, body=event, sendUpdates="all").execute()

    return {
        "status": "Booked",
        "eventLink": event.get("htmlLink")
    }

"""# **streamlit_app.py ‚Äì Streamlit Frontend**"""

import streamlit as st
import requests
from datetime import datetime, timedelta

st.title("üìÖ Google Calendar Booking App")
st.write("Fill in the details below to schedule a meeting.")

with st.form("booking_form"):
    name = st.text_input("Your Name", value="Sameer")
    email = st.text_input("Your Email", value="sameer@example.com")

    date = st.date_input("Select Date", datetime.now().date())
    start_time = st.time_input("Start Time", datetime.now().time())
    end_time = st.time_input("End Time", (datetime.now() + timedelta(minutes=30)).time())

    submitted = st.form_submit_button("Book Appointment")

if submitted:
    start = datetime.combine(date, start_time)
    end = datetime.combine(date, end_time)

    payload = {
        "name": name,
        "email": email,
        "start": start.isoformat(),
        "end": end.isoformat()
    }

    try:
        response = requests.post("https://your-ngrok-url.ngrok-free.app/book", json=payload)  # Replace with your ngrok
        result = response.json()
        if response.status_code == 200:
            st.success("‚úÖ Appointment Booked!")
            st.markdown(f"[üìÖ View Event]({result['eventLink']})")
        else:
            st.error("‚ùå Booking failed.")
    except Exception as e:
        st.error(f"Error: {e}")

from google.colab import files
uploaded = files.upload()